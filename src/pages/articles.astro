---
import Layout from "../layouts/Layout.astro";
import Navigation from "../components/Navigation.astro";
import {
  getPublishedArticles,
  getFeaturedArticles,
  getAllTags,
} from "../utils/articles";

const articles = await getPublishedArticles();
const featuredArticles = await getFeaturedArticles();
const allTags = getAllTags(articles);
---

<Layout title="Articles - Davide Mendolia">
  <Navigation />

  <!-- Hero Section -->
  <section class="hero">
    <div class="container">
      <div class="hero-content fade-in">
        <h1>Articles & Insights</h1>
        <p class="subtitle">
          Technical leadership, engineering practices, and lessons learned from
          scaling platforms
        </p>
      </div>
    </div>
  </section>

  {
    featuredArticles.length > 0 && (
      <section class="featured-articles">
        <div class="container">
          <h2 class="section-title fade-in">Featured Articles</h2>
          <div class="featured-grid">
            {featuredArticles.map((article) => (
              <article class="featured-card fade-in">
                <h3>
                  <a href={`/articles/${article.id}`}>{article.data.title}</a>
                </h3>
                {article.data.description && (
                  <p class="description">{article.data.description}</p>
                )}
                <div class="meta">
                  <span class="author">by {article.data.author}</span>
                  {article.data.publishDate && (
                    <time datetime={article.data.publishDate.toISOString()}>
                      {article.data.publishDate.toLocaleDateString()}
                    </time>
                  )}
                </div>
                {article.data.tags.length > 0 && (
                  <div class="tags">
                    {article.data.tags.map((tag) => (
                      <a href={`/articles/tags/${tag}`} class="tag">
                        {tag}
                      </a>
                    ))}
                  </div>
                )}
              </article>
            ))}
          </div>
        </div>
      </section>
    )
  }

  <section class="all-articles">
    <div class="container">
      <h2 class="section-title fade-in">All Articles</h2>
      <div class="articles-grid">
        {
          articles.map((article) => (
            <article class="article-card fade-in">
              <h3>
                <a href={`/articles/${article.id}`}>{article.data.title}</a>
              </h3>
              {article.data.description && (
                <p class="description">{article.data.description}</p>
              )}
              <div class="meta">
                <span class="author">by {article.data.author}</span>
                {article.data.publishDate && (
                  <time datetime={article.data.publishDate.toISOString()}>
                    {article.data.publishDate.toLocaleDateString()}
                  </time>
                )}
              </div>
              {article.data.tags.length > 0 && (
                <div class="tags">
                  {article.data.tags.map((tag) => (
                    <a href={`/articles/tags/${tag}`} class="tag">
                      {tag}
                    </a>
                  ))}
                </div>
              )}
            </article>
          ))
        }
      </div>
    </div>
  </section>

  {
    allTags.length > 0 && (
      <section class="tags-section">
        <div class="container">
          <h3 class="section-title fade-in">Browse by Topic</h3>
          <div class="all-tags fade-in">
            {allTags.map((tag) => (
              <a href={`/articles/tags/${tag}`} class="tag-pill">
                {tag}
              </a>
            ))}
          </div>
        </div>
      </section>
    )
  }
</Layout>

<style>
  /* Hero Section */
  .hero {
    background: linear-gradient(
      135deg,
      var(--bg-primary) 0%,
      var(--bg-light) 100%
    );
    padding: 10rem 0 4rem;
    text-align: center;
  }

  .hero-content h1 {
    font-size: 3.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    color: var(--primary-color);
  }

  .subtitle {
    font-size: 1.25rem;
    color: var(--text-light);
    max-width: 600px;
    margin: 0 auto;
    line-height: 1.6;
  }

  /* Section Styling */
  section {
    padding: 4rem 0;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .section-title {
    font-size: 2.5rem;
    font-weight: 700;
    text-align: center;
    margin-bottom: 3rem;
    color: var(--primary-color);
  }

  /* Featured Articles */
  .featured-articles {
    background: var(--bg-light);
  }

  .featured-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 2rem;
  }

  .featured-card {
    background: var(--card-bg);
    border-radius: 16px;
    padding: 2rem;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    border: 2px solid var(--accent-color);
    transition:
      transform 0.2s ease,
      box-shadow 0.2s ease;
  }

  .featured-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
  }

  .featured-card h3 {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 1rem;
    line-height: 1.3;
  }

  .featured-card h3 a {
    color: var(--primary-color);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .featured-card h3 a:hover {
    color: var(--accent-color);
  }

  /* All Articles */
  .articles-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
  }

  .article-card {
    background: var(--card-bg);
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: 0 2px 15px rgba(0, 0, 0, 0.05);
    border: 1px solid var(--border-color);
    transition:
      transform 0.2s ease,
      box-shadow 0.2s ease;
  }

  .article-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 25px rgba(0, 0, 0, 0.1);
  }

  .article-card h3 {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    line-height: 1.4;
  }

  .article-card h3 a {
    color: var(--primary-color);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .article-card h3 a:hover {
    color: var(--accent-color);
  }

  .description {
    color: var(--text-light);
    margin-bottom: 1.25rem;
    line-height: 1.6;
    font-size: 0.95rem;
  }

  .meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    color: var(--text-light);
    font-size: 0.875rem;
  }

  .author {
    font-weight: 500;
  }

  time {
    font-style: italic;
  }

  /* Tags */
  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .tag {
    background: var(--bg-light);
    color: var(--secondary-color);
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.8rem;
    text-decoration: none;
    transition: all 0.2s ease;
    font-weight: 500;
  }

  .tag:hover {
    background: var(--accent-color);
    color: white;
    transform: scale(1.05);
  }

  /* Tags Section */
  .tags-section {
    background: var(--bg-light);
    text-align: center;
  }

  .all-tags {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
  }

  .tag-pill {
    background: var(--accent-color);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 30px;
    font-size: 0.95rem;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .tag-pill:hover {
    background: var(--secondary-color);
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .hero-content h1 {
      font-size: 2.5rem;
    }

    .subtitle {
      font-size: 1.1rem;
    }

    .section-title {
      font-size: 2rem;
    }

    .featured-grid,
    .articles-grid {
      grid-template-columns: 1fr;
    }

    .container {
      padding: 0 1rem;
    }

    .hero {
      padding: 8rem 0 3rem;
    }

    section {
      padding: 3rem 0;
    }

    .meta {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
  }
</style>
