---
import Layout from "../layouts/Layout.astro";
import {
  getPublishedArticles,
  getFeaturedArticles,
  getAllTags,
} from "../utils/articles";

const articles = await getPublishedArticles();
const featuredArticles = await getFeaturedArticles();
const allTags = getAllTags(articles);
---

<Layout title="Articles">
  <main>
    <h1>Articles</h1>

    {
      featuredArticles.length > 0 && (
        <section class="featured">
          <h2>Featured Articles</h2>
          <div class="featured-grid">
            {featuredArticles.map((article) => (
              <article class="featured-card">
                <h3>
                  <a href={`/articles/${article.id}`}>{article.data.title}</a>
                </h3>
                {article.data.description && (
                  <p class="description">{article.data.description}</p>
                )}
                <div class="meta">
                  <small>by {article.data.author}</small>
                  {article.data.publishDate && (
                    <time datetime={article.data.publishDate.toISOString()}>
                      {article.data.publishDate.toLocaleDateString()}
                    </time>
                  )}
                </div>
                {article.data.tags.length > 0 && (
                  <div class="tags">
                    {article.data.tags.map((tag) => (
                      <a href={`/articles/tags/${tag}`} class="tag">
                        {tag}
                      </a>
                    ))}
                  </div>
                )}
              </article>
            ))}
          </div>
        </section>
      )
    }

    <section class="all-articles">
      <h2>All Articles</h2>
      <div class="article-list">
        {
          articles.map((article) => (
            <article class="article-card">
              <h3>
                <a href={`/articles/${article.id}`}>{article.data.title}</a>
              </h3>
              {article.data.description && (
                <p class="description">{article.data.description}</p>
              )}
              <div class="meta">
                <small>by {article.data.author}</small>
                {article.data.publishDate && (
                  <time datetime={article.data.publishDate.toISOString()}>
                    {article.data.publishDate.toLocaleDateString()}
                  </time>
                )}
              </div>
              {article.data.tags.length > 0 && (
                <div class="tags">
                  {article.data.tags.map((tag) => (
                    <a href={`/articles/tags/${tag}`} class="tag">
                      {tag}
                    </a>
                  ))}
                </div>
              )}
            </article>
          ))
        }
      </div>
    </section>

    {
      allTags.length > 0 && (
        <section class="tags-section">
          <h3>Browse by Tags</h3>
          <div class="all-tags">
            {allTags.map((tag) => (
              <a href={`/articles/tags/${tag}`} class="tag-pill">
                {tag}
              </a>
            ))}
          </div>
        </section>
      )
    }
  </main>
</Layout>

<style>
  main {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  h1 {
    font-size: 2.5rem;
    margin-bottom: 2rem;
    text-align: center;
  }

  .featured {
    margin-bottom: 3rem;
  }

  .featured h2 {
    color: #0066cc;
    margin-bottom: 1.5rem;
  }

  .featured-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }

  .featured-card {
    border: 2px solid #0066cc;
    border-radius: 8px;
    padding: 1.5rem;
    background: #f8fbff;
  }

  .article-list {
    display: grid;
    gap: 1.5rem;
  }

  .article-card {
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    padding: 1.5rem;
    background: white;
    transition: box-shadow 0.2s ease;
  }

  .article-card:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .article-card h3,
  .featured-card h3 {
    margin-top: 0;
    margin-bottom: 0.75rem;
  }

  .article-card h3 a,
  .featured-card h3 a {
    text-decoration: none;
    color: #333;
  }

  .article-card h3 a:hover,
  .featured-card h3 a:hover {
    color: #0066cc;
  }

  .description {
    color: #666;
    margin-bottom: 1rem;
    line-height: 1.5;
  }

  .meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    color: #777;
    font-size: 0.9rem;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    background: #f0f0f0;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.8rem;
    color: #555;
    text-decoration: none;
    transition:
      background-color 0.2s ease,
      color 0.2s ease;
  }

  .tag:hover {
    background: #0066cc;
    color: white;
  }

  .tags-section {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid #e0e0e0;
  }

  .all-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
  }

  .tag-pill {
    background: #0066cc;
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.9rem;
    cursor: pointer;
    text-decoration: none;
    display: inline-block;
    transition: background-color 0.2s ease;
  }

  .tag-pill:hover {
    background: #0052a3;
  }
</style>
